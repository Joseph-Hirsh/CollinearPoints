import java.util.*;
import edu.princeton.cs.algs4.StdDraw;

public class Point implements Comparable<Point> {

    private final int x;     // x-coordinate of this point
    private final int y;     // y-coordinate of this point

    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }

    public void draw() {
        for (int i = -50; i <= 50; i++) {
            for (int j = -50; j <= 50; j++) {
                StdDraw.point(x+i, y+j);
            }
        }
    }

    public void drawTo(Point that) {
        StdDraw.line(this.x, this.y, that.x, that.y);
    }

    public double slopeTo(Point that) {
        double DeltaY = y - that.y;
        double DeltaX = x - that.x;
        if (DeltaX == 0) return Double.POSITIVE_INFINITY;
        return DeltaY / DeltaX;
    }

    public int compareTo(Point that) {
        if (y < that.y || (y == that.y && x < that.x)) return -1;
        else return 1;
    }

    public Comparator<Point> slopeOrder(Point a, Point b) {
        return new SlopeOrder();
    }

    private class SlopeOrder implements Comparator<Point> {
        public int compare(Point a, Point b) {
            return Double.compare(slopeTo(a), slopeTo(b));
    }
}

    public String toString() {
        return "(" + x + ", " + y + ")";
    }

    public static void main(String[] args) {
        StdDraw.enableDoubleBuffering();
        StdDraw.setXscale(0, 32768);
        StdDraw.setYscale(0, 32768);
    }
}
